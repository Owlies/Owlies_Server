local redis = require "hiredis"

local useraccountlib = require "dbobjuseraccountlib"

local redisAddr = "127.0.0.1"
local redisPort = 6379

local redisContext, res, size;

objUserAccount = useraccountlib.new()

objUserAccount:setUserAccountUserId("uid_0523")
objUserAccount:setUserAccountAccount("music_run_0523")
objUserAccount:setUserAccountDevice("Android Nexus 6")
objUserAccount:setUserAccountFacebookAccount("https://www.facebook.com/johnson.green.338")
objUserAccount:setUserAccountGooglePlayAccount("https://plus.google.com/u/0/+JohnsonGreen")
objUserAccount:setUserAccountIdentifier("music_run_uid_0523")

redis.redisInit(redisAddr, redisPort);

print("Init done")

local redisStringTestKey = objUserAccount:getUserAccountRedisItemKey()
local redisStringTestValue = objUserAccount:getUserAccountRedisItemValue()

print("The test key is "..redisStringTestKey)

res,size = redis.redisSetByteString(redisStringTestKey, objUserAccount:getUserAccountRedisItemValue(), string.len( objUserAccount:getUserAccountRedisItemValue() ));

print("Set Redis KV done")

res,size = redis.redisGetByteString(redisStringTestKey)


print("Get Redis Value done")

print("The actual value is "..res)
print("The expected value is "..redisStringTestValue)

if res ~= redisStringTestValue then
    error("Value returned from Redis for given key does not match the one generated by UserAccount DB Obj.")
end

redis.redisDisconnect();
